version: "3"
services:
  postgres:
    image: library/postgres:15
    container_name: postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./postgres/:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
    restart: always

  kafka:
    image: wurstmeister/kafka
    restart: always
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  redis:
    image: 'bitnami/redis:latest'
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"

  gateway_service:
    build: services
    container_name: gateway_service
    restart: always
    ports:
      - "8080:80"
    depends_on:
      - library_system
      - rating_system
      - reservation_system
      - identity_provider
    volumes:
      - ./services/gateway_service:/var/www/html
      - ./instruments:/var/www/html/instruments
    command: bash -c "composer install && php instruments/load_jwks.php && apache2-foreground"

  reservation_system:
    build: services
    container_name: reservation_system
    restart: always
    ports:
      - "8070:80"
    depends_on:
      - postgres
      - identity_provider
    volumes:
      - ./services/reservation_system:/var/www/html
      - ./instruments:/var/www/html/instruments
    command: bash -c "composer install && php instruments/load_jwks.php && apache2-foreground"

  library_system:
    build: services
    container_name: library_system
    restart: always
    ports:
      - "8060:80"
    depends_on:
      - postgres
      - identity_provider
    volumes:
      - ./services/library_system:/var/www/html
      - ./instruments:/var/www/html/instruments
    command: bash -c "composer install && php instruments/load_jwks.php && apache2-foreground"

  rating_system:
    build: services
    container_name: rating_system
    restart: always
    ports:
      - "8050:80"
    depends_on:
      - postgres
      - identity_provider
    volumes:
      - ./services/rating_system:/var/www/html
      - ./instruments:/var/www/html/instruments
    command: bash -c "composer install && php instruments/load_jwks.php && apache2-foreground"

  identity_provider:
    build: services
    container_name: identity_provider
    restart: always
    ports:
      - "8040:80"
    depends_on:
      - postgres
    volumes:
      - ./services/identity_provider:/var/www/html
      - ./instruments:/var/www/html/instruments
    command: bash -c "composer install && php jwksGenerator.php && apache2-foreground"

  statistic_service:
    build: services
    container_name: statistic_service
    restart: always
    ports:
      - "8030:80"
    depends_on:
      - postgres
      - identity_provider
    volumes:
      - ./services/statistic_service:/var/www/html
      - ./instruments:/var/www/html/instruments
#    command: bash -c "composer install && php instruments/load_jwks.php && mkdir -p db && && chown -R  www-data ./db && apache2-foreground"
    command: bash -c "composer install && php instruments/load_jwks.php && mkdir -p db && chmod 777 -R ./db && { php /var/www/html/save_statistic.php > /dev/null & } && apache2-foreground"

  frontend:
    image: nginx
    container_name: frontend
    working_dir: /usr/share/nginx/html
    restart: always
    ports:
      - "3000:80"
    volumes:
      - ./services/frontend:/usr/share/nginx/html

volumes:
  db-data: